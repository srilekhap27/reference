Refactored Code:
1. Create a Helper Function (filterAndAddRecords)
javascript
Copy code
// Helper function to filter and process records
const filterAndAddRecords = (recordsToProcess, startCount) => {
  const filteredRecords = [];

  recordsToProcess.forEach((singleObj) => {
    const [keySource, keyAction, keyErroname] = singleObj.split('/');

    const sourceMatches = sourceObject && keySource.includes(sourceObject);
    const actionMatches = actionObject && keyAction.includes(actionObject);
    const errornameMatches = errornameObject && keyErroname.includes(errornameObject);

    // Filtering logic
    if (sourceMatches && actionMatches && errornameMatches) {
      filteredRecords.push(addRecord(keyErroname, keySource, timestamp, keyAction, singleObj));
    } else if (sourceMatches && actionMatches) {
      filteredRecords.push(addRecord(keyErroname, keySource, timestamp, keyAction, singleObj));
    } else if (actionMatches && errornameMatches) {
      filteredRecords.push(addRecord(keyErroname, keySource, timestamp, keyAction, singleObj));
    } else if (sourceMatches && errornameMatches) {
      filteredRecords.push(addRecord(keyErroname, keySource, timestamp, keyAction, singleObj));
    } else if (sourceMatches) {
      filteredRecords.push(addRecord(keyErroname, keySource, timestamp, keyAction, singleObj));
    } else if (actionMatches) {
      filteredRecords.push(addRecord(keyErroname, keySource, timestamp, keyAction, singleObj));
    } else if (errornameMatches) {
      filteredRecords.push(addRecord(keyErroname, keySource, timestamp, keyAction, singleObj));
    }
  });

  return filteredRecords;
};
2. Update handleSearch to Use the Helper
javascript
Copy code
const handleSearch = async (e) => {
  if (e && e.preventDefault) {
    e.preventDefault(); // Prevent form submission
  }

  console.log("Calling handleSearch");

  try {
    const response = await getAllRecords(null);
    const data = JSON.parse(response.data.body);
    const recordsToProcess = data.objects;

    // Set the "isMoreData" flag for load more functionality
    setIsMoreData(
      data.nextContinuationToken !== undefined &&
      data.nextContinuationToken.length > 0
    );

    // Start processing from count 1 (or adjust accordingly)
    let startCount = 1;

    // Use the helper function to filter and process the records
    const filteredRecords = filterAndAddRecords(recordsToProcess, startCount);

    if (filteredRecords.length === 0) {
      setFilterErrorMessage("No records matched your search criteria.");
      setRecords([]);
      setIsMoreData(false);
    } else {
      setRecords(filteredRecords);
      setFilterErrorMessage(""); // Clear the error message
    }

    setIsSearchActive(true); // Mark search as active

  } catch (error) {
    setFilterErrorMessage("Error fetching records: Network error");
    console.error("Error fetching records:", error);
  }
};
3. Update handleLoadMore to Use the Same Logic
javascript
Copy code
const handleLoadMore = async () => {
  setScrollPosition(window.scrollY); // Save scroll position

  try {
    const response = await getAllRecords(null); // Fetch next batch of records
    const data = JSON.parse(response.data.body);
    const recordsToProcess = data.objects;

    // Set continuation token to check if more records are available
    setIsMoreData(
      data.nextContinuationToken !== undefined &&
      data.nextContinuationToken.length > 0
    );

    let startCount = combinedRecords.length + 1; // Continue from where the last records ended

    // Use the same helper function to filter and process the new records
    const filteredNewRecords = filterAndAddRecords(recordsToProcess, startCount);

    // Append new records to the existing ones
    const updatedCombinedRecords = [...combinedRecords, ...filteredNewRecords];

    // Update the state
    setRecords(updatedCombinedRecords);

    console.log("Updated Combined Records after Load More:", updatedCombinedRecords);

  } catch (error) {
    setFilterErrorMessage("Error fetching more records: Network error");
    console.error("Error fetching more records:", error);
  }
};
