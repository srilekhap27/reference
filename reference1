// Utility function to introduce a delay
const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));

// Function to retrieve records in a loop until the total is 1000
let retrieveAllRecords = async () => {
    let totalRecords = [];
    let contToken = null; // Initialize the continuation token as null for the first call
    let totalFetched = 0; // To keep track of the total records fetched

    // Loop until we fetch 1000 records
    while (totalFetched < 1000) {
        console.log("Fetching records with continuationToken:", contToken);

        // Fetch records using the continuation token
        let res = await getAllRecords(contToken);
        let data = JSON.parse(res.data.body);
        let objects = data.objects || [];

        // Process the objects returned by the API
        let results = objects.map((entry) => {
            let [source, action, docName] = entry.split('/');
            let unix = convertUnixToDate(docName.split('_').pop());
            let date = new Date(unix);
            let dateString = date.toUTCString();
            return [false, docName, source, dateString, action, entry];
        });

        // Add fetched records to the total
        totalRecords.push(...results);
        totalFetched += results.length;

        // Set the next continuation token
        if (data.nextContinuationToken && data.nextContinuationToken.length > 0) {
            contToken = data.nextContinuationToken; // Set the continuation token for the next API call
        } else {
            // If there's no continuation token, break out of the loop
            console.log("No more records to fetch.");
            break;
        }

        // If fetched records reach or exceed 1000, exit the loop
        if (totalFetched >= 1000) {
            console.log("Reached the limit of 1000 records.");
            break;
        }

        // Introduce a delay of 1 second before calling the API again
        await delay(1000);
    }

    // Store the records in memory storage (can use localStorage or in-memory variable)
    localStorage.setItem('fetchedRecords', JSON.stringify(totalRecords));
    console.log("All records fetched and stored in memory.");
};

// Instead of using handleLoadMore, simply call retrieveAllRecords
retrieveAllRecords();
