package main

import (
    "gopkg.in/DataDog/dd-trace-go.v1/ddtrace/tracer"
    "log"
    "os"
    "time"
    "github.com/gin-gonic/gin"
    "prodgitlab.usaa.com/grp-my-documents-retrieval/ent-mydocs-retrieval-svc/pkg/server"
    "your-project/pkg/controller"  // <-- Import your controller package here
)

func init() {
    // Set the time zone and Gin mode based on the environment
    _, _ = time.LoadLocation("America/Chicago")
    if os.Getenv("RUNTIME_ENV") == "prod" {
        gin.SetMode(gin.ReleaseMode)
    }
}

func main() {
    // Start tracing with DataDog
    tracer.Start(
        tracer.WithService(os.Getenv("DD_SERVICE")),
        tracer.WithTraceEnabled(true),
        tracer.WithRuntimeMetrics(),
        tracer.WithServiceVersion(os.Getenv("DD_VERSION")),
        tracer.WithEnv(os.Getenv("DD_ENV")),
    )
    defer tracer.Stop()

    // Initialize Gin router
    router := gin.Default()

    // Register the route for document retrieval
    router.GET("/documents/:documentGuid/:displayDate", func(c *gin.Context) {
        // Call the document handler here
        controller.GetDocumentHandler(c.Writer, c.Request)
    })

    // Start the server
    if err := server.Run(); err != nil {
        log.Printf("Server failed to start: %v", err)
    }
}
